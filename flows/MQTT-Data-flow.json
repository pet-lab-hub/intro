[
    {
        "id": "884d430cb0401c89",
        "type": "tab",
        "label": "MQTT Data",
        "disabled": false,
        "info": "Este fluxo é composto de vários subfluxos:\r\n - dois que consomem dados simples\r\n publicados em canais separados;\r\n - um que consome dados compostos\r\n publicados como objeto JSON em um mesmo\r\n canal;\r\n- e outro que envia comandos a um\r\ndispositivo atuador.\r\n\r\nOs dados são obtidos por um microcontrolador\r\nESP32 acoplado com sensores AHT20 e BMP280\r\nque coletam dados de temperatura, pressão e \r\numidade relativa do ar.\r\n\r\nSão usados nós:\r\n - MQTT in\r\n - MQTT out\r\n - function\r\n - inject\r\n - debug\r\n\r\nUma das funções atua em um dispositivo,\r\ncontrolado por meio de comandos enviados\r\nem um tópico MQTT específico.\r\n\r\nOutra efetua a formatação dos dados\r\npara número fixo de casas decimais e \r\ninclusão de unidade de medida.",
        "env": []
    },
    {
        "id": "2a827f48ee11ec29",
        "type": "mqtt in",
        "z": "884d430cb0401c89",
        "name": "",
        "topic": "esp-02/sensor/aht20/temp",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3866e7aefdba3bf7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 80,
        "wires": [
            [
                "579b15d0d21dc24a",
                "f9c04661740c9300"
            ]
        ]
    },
    {
        "id": "5e2519a0e9343299",
        "type": "mqtt in",
        "z": "884d430cb0401c89",
        "name": "",
        "topic": "esp-02/sensor/aht20/umid",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3866e7aefdba3bf7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 200,
        "wires": [
            [
                "8974dfdb90aa5718"
            ]
        ]
    },
    {
        "id": "579b15d0d21dc24a",
        "type": "debug",
        "z": "884d430cb0401c89",
        "name": "Temperatura",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 80,
        "wires": []
    },
    {
        "id": "8974dfdb90aa5718",
        "type": "debug",
        "z": "884d430cb0401c89",
        "name": "Umidade",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 200,
        "wires": []
    },
    {
        "id": "bca89a9a4f7b1c4f",
        "type": "mqtt in",
        "z": "884d430cb0401c89",
        "name": "",
        "topic": "esp-02/sensor/bmp280",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3866e7aefdba3bf7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 280,
        "wires": [
            [
                "52c73021d3bcbc97",
                "2604f7167ece0169"
            ]
        ]
    },
    {
        "id": "52c73021d3bcbc97",
        "type": "debug",
        "z": "884d430cb0401c89",
        "name": "Dados JSON",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 280,
        "wires": []
    },
    {
        "id": "2604f7167ece0169",
        "type": "function",
        "z": "884d430cb0401c89",
        "name": "Extrai temperatura",
        "func": "// extrai-temperatura.js\n// Código JavaScript para nó função do fluxo \"MQTT Data\"\n\n// Na mensagem\n// -----------\nconst obj = msg.payload;\nvar temp = obj.temperatura;\nmsg.payload = temp + '°C/';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 340,
        "wires": [
            [
                "8031fd10c8d4500e"
            ]
        ]
    },
    {
        "id": "8031fd10c8d4500e",
        "type": "debug",
        "z": "884d430cb0401c89",
        "name": "Temperatura",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 340,
        "wires": []
    },
    {
        "id": "eb6af2ba58d1b02f",
        "type": "mqtt out",
        "z": "884d430cb0401c89",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3866e7aefdba3bf7",
        "x": 470,
        "y": 420,
        "wires": []
    },
    {
        "id": "df7a1fd0525a6f1a",
        "type": "inject",
        "z": "884d430cb0401c89",
        "name": "Off",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "atuador/led",
        "payload": "desligar",
        "payloadType": "str",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "eb6af2ba58d1b02f"
            ]
        ]
    },
    {
        "id": "2aaf0250ee580568",
        "type": "inject",
        "z": "884d430cb0401c89",
        "name": "On",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "atuador/led",
        "payload": "ligar",
        "payloadType": "str",
        "x": 150,
        "y": 420,
        "wires": [
            [
                "eb6af2ba58d1b02f"
            ]
        ]
    },
    {
        "id": "f9c04661740c9300",
        "type": "function",
        "z": "884d430cb0401c89",
        "name": "Controle de Temperatura",
        "func": "// controle-temperatura.js\n// Código JavaScript para nó função do fluxo \"MQTT Data\"\n\n// Na mensagem\n// -----------\nif (msg.payload > 24) {\n\tmsg.payload = \"ligar\";\n} else {\n\tmsg.payload = \"desligar\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 140,
        "wires": [
            [
                "d3ef69ed2107f023"
            ]
        ]
    },
    {
        "id": "d3ef69ed2107f023",
        "type": "mqtt out",
        "z": "884d430cb0401c89",
        "name": "",
        "topic": "esp-01/atuador/relay",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3866e7aefdba3bf7",
        "x": 600,
        "y": 140,
        "wires": []
    },
    {
        "id": "3866e7aefdba3bf7",
        "type": "mqtt-broker",
        "name": "Mosquitto [local]",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]